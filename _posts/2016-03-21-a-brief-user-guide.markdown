---
layout: post
title: "A brief user guide"
date: 2016-04-22 15:00:00
author: Dmitry Pavlov
categories:
- tutorial
tags:
img:
---

<!-- more -->

## OntoDia service overview

### Purpose

OntoDia lets you create the diagrams from any types of ontology data. Therefore, OntoDIa is the tool for ontology data visualization. With OntoDIa you can plug in any dataset and generate a diagram from it, which would be visualized a a number of elements connected with each other by arrows.

### Features

* You have 2 ways to retrieve your data: SPARQL-endpoint or OWL-file.
* You can visualize acquired data in a form of a diagram, which is a graph of elements and connections between them
* You are able to modify dataset from which the diagram is generated by adding and removing elements and connections
* You can change the default look of generated diagram by applying various layouts, moving elements around on canvas, zooming in and out, reconfiguring the connection arrows and so on
* You are free to save the diagrams for re-opening in the cloud
* You are encouraged to share your diagrams with other by sending the link or by importing a snapshot of your work as an image file

## Manage sources and diagrams

### Manage sources

Sources is the term that we use for the places from which you retrieve the datasets for your diagram. OntoDia can retrieve data from 2 types of sources:

* SPARQL-endpoint
* OWL-file

A SPARQL endpoint enables users (human or other) to query a knowledge base via the SPARQL language. Results are typically returned in one or more machine-processable formats. Therefore, a SPARQL endpoint is mostly conceived as a machine-friendly interface towards a knowledge base. Both the formulation of the queries and the human-readable presentation of the results should typically be implemented by the calling software, and not be done manually by human users.

OWL- The Web Ontology Language (OWL) is a family of knowledge representation languages or ontology languages for authoring ontologies or knowledge bases. The languages are characterized by formal semantics and RDF/XML-based serializations for the Semantic Web. OWL is endorsed by the World Wide Web Consortium (W3C)[1] and has attracted academic, medical and commercial interest.

Also source can contain a formally expressed limitation of data selection from the defined source. For instance, if you use the DBPedia as a source, it would be crazy to visualize al lthe data. For that purpose you limit the amount of retrieved data by writing the SPARQL query.

Read more on creating the new source here.

#### Create source

When you start using OtnoDia you need to configure your first source. To do that click button. The dialogue box for configuring source property pops up.

In Create Data Source dialogue box you need to specify the name for your new source, chose the source type: SPARQL-endpoint of OWL-file.

Provide the set of parameters for the chosen source type.

Hit Save if you want to save the source configuration or click Cancel if you decided not to keep changes made.

##### SPARQL-endpoint parameters

If you’ve chosen SPARQL-endpoint as a source type for the new source you need to define the following parameters:

**SPARQL URL** - it is the URL of your SPARQL-endpoint. For instance, here’s the URL for BBC’s Programmes and Music endpoit: http://lod.openlinksw.com/sparql/

**USERNAME** is the account name to be used to access the endpoint

**PASSWORD** is the password for the username to access the endpoint

**SCOPE OF ELEMENTS** is the field where you can type in the SPARQL-query to limit the amount of objects or elements of
your dataset. There’s already a typical SPARQL query to limit your dataset

**LINK TYPES** - in this field you can specify what type of connections (links) between objects in your ontology you
wish to visualize on your diagram

##### OWL-file parameters

If you’ve chosen OWL-file as a source type for the new source you need to define the following parameters:

**RDF file** - provide the path to the RDF file

**SCOPE OF ELEMENTS** is the field where you can type in the SPARQL-query to limit the amount of objects or elements of your dataset. There’s already a typical SPARQL query to limit your dataset

**LINK TYPES** - in this field you can specify what type of connections (links) between objects in your ontology you wish to visualize on your diagram
